version: '3'
services:
  builder:
    image: kai5263499/diy-jarvis-deepspeech-builder
    build:
      context: .
      dockerfile: Dockerfile
  deepspeech-models:
    image: kai5263499/diy-jarvis-deepspeech-models
    build:
      context: .
      dockerfile: cmd/deepspeech/Dockerfile.model
  deepspeech:
    image: kai5263499/diy-jarvis-deepspeech
    environment: 
      - MQTT_BROKER=tcp://mqtt:1883
      - DEBUG
    build:
      context: .
      dockerfile: cmd/deepspeech/Dockerfile
  mic_capture:
    image: kai5263499/diy-jarvis-mic_capture
    environment: 
      - MQTT_BROKER=tcp://mqtt:1883
      - DEBUG
    build:
      context: .
      dockerfile: cmd/mic_capture/Dockerfile
  # deepspeech:

  #   restart: always
  #   volumes: 
  #     - tmp-content:/tmp
  #   image: "kai5263499/rhema-processor:latest"
  #   build: 
  #     context: .
  #     dockerfile: cmd/processor/Dockerfile
  # storage:
  #   environment: 
  #     - MQTT_BROKER=tcp://mqtt:1883
  #     - GOOGLE_APPLICATION_CREDENTIALS=/tmp/gcp/service-account-file.json
  #     - BUCKET
  #   restart: always
  #   volumes:
  #     - tmp-content:/tmp
  #     - ${LOCAL_PATH}:/data
  #     - ${GOOGLE_APPLICATION_CREDENTIALS}:/tmp/gcp/service-account-file.json
  #   image: "kai5263499/rhema-storage:latest"
  #   build:
  #     context: .
  #     dockerfile: cmd/storage/Dockerfile
  # apiserver:
  #   environment: 
  #     - MQTT_BROKER=tcp://mqtt:1883
  #     - GOOGLE_APPLICATION_CREDENTIALS=/tmp/gcp/service-account-file.json
  #   restart: always
  #   volumes:
  #     - ${GOOGLE_APPLICATION_CREDENTIALS}:/tmp/gcp/service-account-file.json
  #   image: "kai5263499/rhema-apiserver:latest"
  #   ports:
  #     - "8081:8080"
  #   build:
  #     context: .
  #     dockerfile: cmd/apiserver/Dockerfile
  # contentbot:
  #   environment: 
  #     - MQTT_BROKER=tcp://mqtt:1883
  #     - SLACK_TOKEN
  #     - CHANNELS
  #   restart: always
  #   image: "kai5263499/diy-jarvis-:latest"
  #   build:
  #     context: .
  #     dockerfile: cmd/contentbot/Dockerfile
  mqtt:
    image: "eclipse-mosquitto:latest"
    restart: always
volumes:
  tmp-content:
  
